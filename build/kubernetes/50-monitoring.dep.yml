---
# Generated by Boilr at
apiVersion: "extensions/v1beta1"
kind: "Deployment"
metadata:
  labels:
    application: "prometheus"
    role: "server"
  name: "prometheus-deployment"
  namespace: "ps-littleman-co"
spec:
  replicas: 1
  selector:
    matchLabels:
      application: "prometheus"
      role: "server"
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: "RollingUpdate"
  template:
    metadata:
      labels:
        application: "prometheus"
        role: "server"
    spec:
      volumes:
      - name: "etc-prometheus"
        configMap:
          name: "etc-prometheus"
      containers:
      - name: "prometheus"
        image: "quay.io/coreos/prometheus:0.20.0" # Todo: Update this
        imagePullPolicy: "IfNotPresent"
        args:
          - '-storage.local.retention=6h'
          - '-storage.local.memory-chunks=500000'
          - '-config.file=/etc/prometheus/prometheus.yml'
        ports:
        - containerPort: 9090
          protocol: "TCP"
          name: "http"
        volumeMounts:
        - name: "etc-prometheus"
          readOnly: true
          mountPath: "/etc/prometheus"
        livenessProbe:
          httpGet:
            # Path to probe; should be cheap, but representative of typical behavior
            path: "/metrics"
            port: 9090
          initialDelaySeconds: 15
          timeoutSeconds: 15
        readinessProbe:
          httpGet:
            # Path to probe; akin to a status check.
            path: "/metrics"
            port: 9090
          initialDelaySeconds: 15
          timeoutSeconds: 15
      restartPolicy: "Always"
      securityContext: {}
